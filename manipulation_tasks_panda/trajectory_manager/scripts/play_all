#!/usr/bin/env python3
"""
Playback of trajectories and storing them into a databaseself.
"""
from lfd import LfD
from lfd_image import LfD_image
import sys
from std_srvs.srv import Trigger
import sys
import os
import rospy

if __name__ == '__main__':
    try:
        # trajectory_name = sys.argv[1]
        localization_flag = sys.argv[1]
    except IndexError:
        print("Usage: " + os.path.basename(__file__) + " <trajectory_file_name>")
        sys.exit(1)

    lfd = LfD_image()
    # else:
    #     lfd = LfD()

    if int(localization_flag):
        rospy.wait_for_service('active_localizer')
        active_localizer = rospy.ServiceProxy('active_localizer', Trigger)
        resp = active_localizer()
        lfd.compute_final_transform() 
    
    try:
        lfd.load("blue")
        lfd.execute()
        
        lfd.load("slider")
        lfd.execute()

        lfd.load("peg_pick")
        lfd.execute()

        lfd.load("peg_door")
        lfd.execute()

        lfd.load("peg_place")
        lfd.execute()

        lfd.load("peg_push")
        lfd.execute()

        lfd.load("probe_pick")
        lfd.execute()

        lfd.load("probe")
        lfd.execute()

        lfd.load("probe_place")
        lfd.execute(retry_insertion_flag=1)

        lfd.load("wrap_")
        lfd.execute()

        lfd.load("red")
        lfd.execute()
    except rospy.ROSInterruptException:
        pass



